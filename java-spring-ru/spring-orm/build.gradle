plugins {
  id 'java'
  id 'checkstyle'
  id 'org.springframework.boot' version '3.0.6'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.liquibase.gradle' version '2.2.0'

}

group = 'exercise'


configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  implementation(
          'org.springframework.boot:spring-boot-starter-data-jpa',
          'org.springframework.boot:spring-boot-starter-web',
          'org.liquibase:liquibase-core',
  )

  testImplementation(
          'org.springframework.boot:spring-boot-starter-test'
  )

  compileOnly 'org.projectlombok:lombok'

  runtimeOnly (
          'com.h2database:h2',
          'org.postgresql:postgresql:42.6.0'
  )

  liquibaseRuntime(
          sourceSets.main.output,
          'org.liquibase:liquibase-core',
          'info.picocli:picocli:4.7.1',
          'org.liquibase.ext:liquibase-hibernate6:4.21.1',
          'org.springframework.boot:spring-boot-starter-data-jpa',
          'com.h2database:h2',
  )

  annotationProcessor(
          'org.projectlombok:lombok',
  )
}

tasks.named('test') {
  useJUnitPlatform()
}

compileJava {
  options.release = 17
  options.encoding = 'UTF-8'
}

diffChangelog {
  dependsOn compileJava
}

// Настраиваем Liquibase
liquibase {
  activities {
    main {
      // Указываем путь, по которому будет сгенерирован файл миграции
      changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
      // Указывем источник, с которым будут сравниваться из	менения
      // Это база данных, изначально она пустая
      url 'jdbc:h2:file:./hexlet'
      // Имя пользователя и пароль для подключения к базе
      // Сравниваем с моделями, задавая пакет
      referenceUrl 'hibernate:spring:exercise.model.' +
              // Указываем диалект
              '?dialect=org.hibernate.dialect.H2Dialect' +
              // Указываем правила именования таблиц и столбцов,
              // чтобы они соответствовали правилам Spring
              '&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
    }
  }
}
